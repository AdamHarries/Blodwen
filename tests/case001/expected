Welcome to TTImp. Good luck.
Loading cases.tti
Processing as TTImp
LOG 0: --- CONSTRAINTS AND HOLES ---
LOG 0: ?Main.something : (m : Main.Nat) -> (a : Type) -> (ys : (Main.Vect m a)) -> (n : Main.Nat) -> (xs : (Main.Vect n a)) -> ({k:29} : Main.Nat) -> (xs : (Main.Vect {k:29} a)) -> (x : a) -> (Main.Vect (Main.plus {k:29} m) a)
Blodwen> (Main.Cons __ 1 __ (Main.Cons __ 2 __ (Main.Cons __ 3 __ (Main.Cons __ 4 __ (Main.Nil __))))) : (Main.Vect (Main.S (Main.S (Main.S (Main.S Main.Z)))) Integer)
Blodwen> (Main.Cons __ 1 __ (Main.something (Main.S (Main.S Main.Z)) Integer (Main.Cons __ 3 __ (Main.Cons __ 4 __ (Main.Nil __))) (Main.S (Main.S Main.Z)) (Main.Cons __ 1 __ (Main.Cons __ 2 __ (Main.Nil __))) (Main.S Main.Z) (Main.Cons __ 2 __ (Main.Nil __)) 1)) : (Main.Vect (Main.S (Main.S (Main.S (Main.S Main.Z)))) Integer)
Blodwen> Bye for now!
Welcome to TTImp. Good luck.
Loading cases.ttc
Processing as TTC
LOG 0: --- CONSTRAINTS AND HOLES ---
LOG 0: ?Main.something : (m : Main.Nat) -> (a : Type) -> (ys : (Main.Vect m a)) -> (n : Main.Nat) -> (xs : (Main.Vect n a)) -> ({k:29} : Main.Nat) -> (xs : (Main.Vect {k:29} a)) -> (x : a) -> (Main.Vect (Main.plus {k:29} m) a)
Blodwen> (Main.Cons __ 1 __ (Main.Cons __ 2 __ (Main.Cons __ 3 __ (Main.Cons __ 4 __ (Main.Nil __))))) : (Main.Vect (Main.S (Main.S (Main.S (Main.S Main.Z)))) Integer)
Blodwen> (Main.Cons __ 1 __ (Main.something (Main.S (Main.S Main.Z)) Integer (Main.Cons __ 3 __ (Main.Cons __ 4 __ (Main.Nil __))) (Main.S (Main.S Main.Z)) (Main.Cons __ 1 __ (Main.Cons __ 2 __ (Main.Nil __))) (Main.S Main.Z) (Main.Cons __ 2 __ (Main.Nil __)) 1)) : (Main.Vect (Main.S (Main.S (Main.S (Main.S Main.Z)))) Integer)
Blodwen> Bye for now!
