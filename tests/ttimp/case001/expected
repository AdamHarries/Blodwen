Welcome to TTImp. Good luck.
Loading cases.tti
Processing as TTImp
LOG 0: --- CONSTRAINTS AND HOLES ---
LOG 0: ?Main.something : (0 m : Main.Nat) -> (0 a : Type) -> (ys : (Main.Vect !m !a)) -> (0 n : Main.Nat) -> (xs : (Main.Vect !n !a)) -> (0 {k:29} : Main.Nat) -> (xs : (Main.Vect !{k:29} !a)) -> (x : !a) -> (Main.Vect (Main.plus !{k:29} !m) !a)
Blodwen> (Main.Cons Integer 1 (Main.S (Main.S (Main.S Main.Z))) (Main.Cons Integer 2 (Main.S (Main.S Main.Z)) (Main.Cons Integer 3 (Main.S Main.Z) (Main.Cons Integer 4 Main.Z (Main.Nil Integer))))) : (Main.Vect (Main.S (Main.S (Main.S (Main.S Main.Z)))) Integer)
Blodwen> (Main.Cons Integer 1 (Main.S (Main.S (Main.S Main.Z))) (Main.something (Main.S (Main.S Main.Z)) Integer (Main.Cons Integer 3 (Main.S Main.Z) (Main.Cons Integer 4 Main.Z (Main.Nil Integer))) (Main.S (Main.S Main.Z)) (Main.Cons Integer 1 (Main.S Main.Z) (Main.Cons Integer 2 Main.Z (Main.Nil Integer))) (Main.S Main.Z) (Main.Cons Integer 2 Main.Z (Main.Nil Integer)) 1)) : (Main.Vect (Main.S (Main.S (Main.S (Main.S Main.Z)))) Integer)
Blodwen> Bye for now!
Welcome to TTImp. Good luck.
Loading build/cases.ttc
Processing as TTC
LOG 0: --- CONSTRAINTS AND HOLES ---
LOG 0: ?Main.something : (0 m : Main.Nat) -> (0 a : Type) -> (ys : (Main.Vect !m !a)) -> (0 n : Main.Nat) -> (xs : (Main.Vect !n !a)) -> (0 {k:29} : Main.Nat) -> (xs : (Main.Vect !{k:29} !a)) -> (x : !a) -> (Main.Vect (Main.plus !{k:29} !m) !a)
Blodwen> (Main.Cons Integer 1 (Main.S (Main.S (Main.S Main.Z))) (Main.Cons Integer 2 (Main.S (Main.S Main.Z)) (Main.Cons Integer 3 (Main.S Main.Z) (Main.Cons Integer 4 Main.Z (Main.Nil Integer))))) : (Main.Vect (Main.S (Main.S (Main.S (Main.S Main.Z)))) Integer)
Blodwen> (Main.Cons Integer 1 (Main.S (Main.S (Main.S Main.Z))) (Main.something (Main.S (Main.S Main.Z)) Integer (Main.Cons Integer 3 (Main.S Main.Z) (Main.Cons Integer 4 Main.Z (Main.Nil Integer))) (Main.S (Main.S Main.Z)) (Main.Cons Integer 1 (Main.S Main.Z) (Main.Cons Integer 2 Main.Z (Main.Nil Integer))) (Main.S Main.Z) (Main.Cons Integer 2 Main.Z (Main.Nil Integer)) 1)) : (Main.Vect (Main.S (Main.S (Main.S (Main.S Main.Z)))) Integer)
Blodwen> Bye for now!
