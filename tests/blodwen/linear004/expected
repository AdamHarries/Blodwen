Processing as Idris
1/2: Building Stuff (Stuff.blod)
2/2: Building erase (erase.blod)
Welcome to Blodwen. Good luck.
Main> S Z
Main> S (S Z)
Main> S Z
Main> (interactive):1:15--1:16:Trying to use irrelevant name x in relevant context
Main> (interactive):1:5--1:31:When unifying: ({pi:37} : Stuff.Nat) -> ({pi:38} : Stuff.Nat) -> Stuff.Nat and (0 x : Stuff.Nat) -> ({pi:1} : Stuff.Nat) -> Stuff.Nat
	(interactive):1:5--1:31:Type mismatch: ({pi:37} : Stuff.Nat) -> ({pi:38} : Stuff.Nat) -> Stuff.Nat and (0 x : Stuff.Nat) -> ({pi:1} : Stuff.Nat) -> Stuff.Nat
Main> (interactive):1:5--1:31:When unifying: (1 x : Stuff.Nat) -> ({pi:5} : Stuff.Nat) -> Stuff.Nat and (0 x : Stuff.Nat) -> ({pi:1} : Stuff.Nat) -> Stuff.Nat
	(interactive):1:5--1:31:Type mismatch: (1 x : Stuff.Nat) -> ({pi:5} : Stuff.Nat) -> Stuff.Nat and (0 x : Stuff.Nat) -> ({pi:1} : Stuff.Nat) -> Stuff.Nat
Main> (interactive):1:20--1:22:Trying to use irrelevant name x in non-linear context
Main> S (S Z)
Main> S (S Z)
Main> (interactive):1:6--1:31:When unifying: (0 x : Stuff.Nat) -> ({pi:4} : Stuff.Nat) -> Stuff.Nat and (x : Stuff.Nat) -> ({pi:3} : Stuff.Nat) -> Stuff.Nat
	(interactive):1:6--1:31:Type mismatch: (0 x : Stuff.Nat) -> ({pi:4} : Stuff.Nat) -> Stuff.Nat and (x : Stuff.Nat) -> ({pi:3} : Stuff.Nat) -> Stuff.Nat
Main> Bye for now!
